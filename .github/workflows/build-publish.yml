name: "JFrog-GitHub NPM Publish OIDC Integration"
on: push

permissions:
  id-token: write

jobs:
  build:
     runs-on: ubuntu-latest
     env:
      OIDC_AUDIENCE: 'Jfrog-github'
      OIDC_PROVIDER: 'test1322'
      PLATFORM_REPO: 'npm'
     defaults:
      run:
        working-directory: ./package
     steps:
       - name: Checkout
         uses: actions/checkout@v4
              
       - name: Print Specific Environment Variables
         run: |
           echo "OIDC_AUDIENCE is set to: ${{ env.OIDC_AUDIENCE }}"
           echo "OIDC_PROVIDER is set to: ${{ env.OIDC_PROVIDER }}"
           echo "JFrog URL is set to: ${{ secrets.JF_URL }}"

       - name: Setup Node npm
         uses: actions/setup-node@v3
   
       - name: Setup JFrog CLI
         id: setup-cli  # ID to reference outputs
         uses: jfrog/setup-jfrog-cli@v3
         env:  
           JF_URL: ${{ secrets.JF_URL }}
         with:
           oidc-provider-name: ${{ env.OIDC_PROVIDER }}
           oidc-audience: ${{ env.OIDC_AUDIENCE }}

       - name: Test JFrog Connection
         run: |
            # Enable debug logging
            export DEBUG=1
            
            # Test connection
            jf rt ping || {
              echo "Ping failed. Checking configuration:"
              jf c show
              exit 1
            }

       - name: Create settings.xml
         run: |
           cat <<EOF > settings.xml
           <?xml version="1.0" encoding="UTF-8"?>
           <settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd" xmlns="http://maven.apache.org/SETTINGS/1.2.0"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
             <servers>
               <server>
                 <username>${{ steps.setup-cli.outputs.oidc-user }}</username>
                 <password>${{ steps.setup-cli.outputs.oidc-token }}</password>
                 <id>central</id>
               </server>
               <server>
                 <username>${{ steps.setup-cli.outputs.oidc-user }}</username>
                 <password>${{ steps.setup-cli.outputs.oidc-token }}</password>
                 <id>snapshots</id>
               </server>
             </servers>
             <profiles>
               <profile>
                 <repositories>
                   <repository>
                     <snapshots>
                       <enabled>false</enabled>
                     </snapshots>
                     <id>central</id>
                     <name>267471-maven-libs-release</name>
                     <url>https://test.jfrog.io/artifactory/test-basselm-libs-release-local</url>
                   </repository>
                   <repository>
                     <snapshots>
                       <enabled>true</enabled>
                     </snapshots>
                     <id>snapshots</id>
                     <name>test-basselm-libs-release-local</name>
                     <url>https://test.jfrog.io/artifactory/test-basselm-libs-release-local</url>
                   </repository>
                 </repositories>
                 <pluginRepositories>
                   <pluginRepository>
                     <snapshots>
                       <enabled>false</enabled>
                     </snapshots>
                     <id>central</id>
                     <name>test-basselm-libs-release-local</name>
                     <url>https://test.jfrog.io/artifactory/test-basselm-libs-release-local</url>
                   </pluginRepository>
                   <pluginRepository>
                     <snapshots>
                       <enabled>true</enabled>
                     </snapshots>
                     <id>snapshots</id>
                     <name>test-basselm-libs-release-local</name>
                     <url>https://test.jfrog.io/artifactory/test-basselm-libs-release-local/</url>
                   </pluginRepository>
                 </pluginRepositories>
                 <id>artifactory</id>
               </profile>
             </profiles>
             <activeProfiles>
               <activeProfile>artifactory</activeProfile>
             </activeProfiles>
           </settings>
           EOF

       - name: Run Maven Deploy
         run: mvn clean deploy -e -s settings.xml
